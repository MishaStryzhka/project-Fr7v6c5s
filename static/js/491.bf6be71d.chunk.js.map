{"version":3,"file":"static/js/491.bf6be71d.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/authPages/RegisterPage.jsx","pages/authPages/RegisterPage.styled.jsx"],"sourcesContent":["import { Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const RegisterFormEl = styled.form`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RegisterFormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 1.36;\n  color: ${({ theme }) => theme.color.secondary};\n  margin-bottom: 40px;\n\n  @media screen and (max-width: 767px) {\n    font-size: 24px;\n    line-height: 1.38;\n  }\n`;\n\nexport const RegisterFormUsernameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormUsernameInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.color.error : theme.color.btnDark)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormEmailContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormEmailInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.color.error : theme.color.btnDark)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormInput = styled(Field)`\n  padding: 12px 0;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  box-sizing: border-box;\n\n  width: 100%;\n  height: 48px;\n  border: none;\n  outline: none;\n`;\n\nexport const ErrorIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\n\nexport const ErrorMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.color.error};\n`;\n\nexport const RegisterFormPasswordContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error, secure }) => (error || secure ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error, secure }) => (error || secure ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormPasswordInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error, secure }) =>\n      error\n        ? theme.color.error\n        : secure\n        ? theme.color.indicator\n        : theme.color.btnDark};\n  border-radius: 40px;\n`;\n\nexport const PasswordIcon = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const EyeIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\n\nexport const CheckMarkIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\n\nexport const InfoMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.color.indicator};\n`;\n\nexport const RegisterErrorMessage = styled.div`\n  padding: 15px 16px 0 16px;\n  color: ${({ theme }) => theme.color.error};\n`;\n\nexport const RegisterBtn = styled.button`\n  margin-top: 8px;\n  margin-bottom: 20px;\n  width: 100%;\n\n  padding: 10px 0 10px 0;\n\n  background: ${({ theme }) => theme.color.btnDark};\n  border: none;\n  border-radius: 40px;\n\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.35;\n\n  letter-spacing: 0.04em;\n\n  color: #ffffff;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 41px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const LoginText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  letter-spacing: 0.04em;\n  color: #888888;\n`;\n\nexport const LoginLink = styled(Link)`\n  text-decoration-line: underline;\n  color: ${({ theme }) => theme.color.btnDark};\n  display: inline;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport theme from 'components/theme';\n\nimport * as Element from './RegisterForm.styled';\n\nimport IconCheck from 'images/icons/IconCheck';\nimport IconCross from 'images/icons/IconCross';\nimport IconEyeOpen from 'images/icons/IconEyeOpen';\nimport IconEyeClosed from 'images/icons/IconEyeClosed';\nimport { useAuth } from 'hooks';\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .matches(/^[a-zA-Z\\s]*$/),\n  email: Yup.string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .matches(\n      /^(?=.{10,63}$)(([0-9A-Za-z]{1}[-0-9A-z.]{1,}[0-9A-Za-z]{1})@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/,\n      'Enter a valid Email'\n    ),\n  password: Yup.string()\n    .required('Password is required')\n    .min(8, 'Password must be at least 8 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n  confirmPassword: Yup.string()\n    .required('Confirm password is required')\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst data = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [emailExist, setEmailExist] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const { currentTheme } = useAuth();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleClickShowConfirmPassword = () =>\n    setShowConfirmPassword(show => !show);\n\n  const handleFormSubmit = async (values, { setSubmitting, resetForm }) => {\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n    const credentials = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    try {\n      const response = await dispatch(register(credentials));\n      if (response.error) {\n        setEmailExist(false);\n      } else {\n        setEmailExist(true);\n        navigate('/user');\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={registerSchema}\n      validateOnChange={false}\n      onSubmit={handleFormSubmit}\n    >\n      {({\n        values,\n        errors,\n        setErrors,\n        touched,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n        handleSubmit,\n        resetForm,\n      }) => {\n        const isPasswordValid = values.password && values.password.length >= 8;\n        const handleFieldChange = e => {\n          const { name } = e.target;\n          setErrors({ ...errors, [name]: '' });\n          handleChange(e);\n        };\n\n        return (\n          <Element.RegisterFormEl onSubmit={handleSubmit}>\n            <Element.RegisterFormTitle>Registration</Element.RegisterFormTitle>\n            <Element.RegisterFormUsernameContainer\n              error={errors.name && touched.name}\n            >\n              <Element.RegisterFormUsernameInputContainer\n                error={errors.name && touched.name}\n                style={{\n                  borderColor:\n                    errors.name && touched.name ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <Element.RegisterFormInput\n                  type=\"string\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  value={values.name}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {errors.name && touched.name && values.name && (\n                  <Element.ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, name: '' } });\n                    }}\n                  >\n                    <IconCross fill={theme[currentTheme].color.error} />\n                  </Element.ErrorIcon>\n                )}\n              </Element.RegisterFormUsernameInputContainer>\n              {errors.name && touched.name && (\n                <Element.ErrorMessage name=\"name\">\n                  {errors.name}\n                </Element.ErrorMessage>\n              )}\n            </Element.RegisterFormUsernameContainer>\n\n            <Element.RegisterFormEmailContainer\n              error={errors.email && touched.email}\n            >\n              <Element.RegisterFormEmailInputContainer\n                error={errors.email && touched.email}\n                style={{\n                  borderColor:\n                    errors.email && touched.email ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <Element.RegisterFormInput\n                  type=\"string\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={values.email}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {errors.email && touched.email && values.email && (\n                  <Element.ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, email: '' } });\n                    }}\n                  >\n                    <IconCross fill={theme[currentTheme].color.error} />\n                  </Element.ErrorIcon>\n                )}\n              </Element.RegisterFormEmailInputContainer>\n\n              {errors.email && touched.email && (\n                <Element.ErrorMessage name=\"email\">\n                  {errors.email}\n                </Element.ErrorMessage>\n              )}\n            </Element.RegisterFormEmailContainer>\n\n            <Element.RegisterFormPasswordContainer\n              error={errors.password && touched.password}\n              secure={isPasswordValid}\n            >\n              <Element.RegisterFormPasswordInputContainer\n                error={errors.password && touched.password}\n                secure={isPasswordValid}\n                style={{\n                  borderColor:\n                    errors.password && touched.password\n                      ? '#F43F5E'\n                      : isPasswordValid\n                      ? '#00C3AD'\n                      : '#54ADFF',\n                }}\n              >\n                <Element.RegisterFormInput\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <Element.PasswordIcon>\n                  <Element.EyeIcon\n                    onClick={handleClickShowPassword}\n                    error={errors.password && touched.password}\n                    secure={isPasswordValid}\n                  >\n                    {showPassword ? (\n                      <IconEyeOpen\n                        fill={\n                          errors.password && touched.password\n                            ? theme[currentTheme].color.error\n                            : isPasswordValid\n                            ? theme[currentTheme].color.indicator\n                            : theme[currentTheme].color.btnDark\n                        }\n                      />\n                    ) : (\n                      <IconEyeClosed\n                        fill={\n                          errors.password && touched.password\n                            ? theme[currentTheme].color.error\n                            : isPasswordValid\n                            ? theme[currentTheme].color.indicator\n                            : theme[currentTheme].color.btnDark\n                        }\n                      />\n                    )}\n                  </Element.EyeIcon>\n                  {isPasswordValid && (\n                    <Element.CheckMarkIcon>\n                      <IconCheck fill={theme[currentTheme].color.indicator} />\n                    </Element.CheckMarkIcon>\n                  )}\n                  {errors.password && touched.password && values.password && (\n                    <Element.ErrorIcon\n                      onClick={() => {\n                        resetForm({ values: { ...values, password: '' } });\n                      }}\n                    >\n                      <IconCross fill={theme[currentTheme].color.error} />\n                    </Element.ErrorIcon>\n                  )}\n                </Element.PasswordIcon>\n              </Element.RegisterFormPasswordInputContainer>\n\n              {errors.password && touched.password && (\n                <Element.ErrorMessage>{errors.password}</Element.ErrorMessage>\n              )}\n              {isPasswordValid && (\n                <Element.InfoMessage valid={isPasswordValid}>\n                  Sufficient password length\n                </Element.InfoMessage>\n              )}\n            </Element.RegisterFormPasswordContainer>\n\n            <Element.RegisterFormPasswordContainer\n              error={errors.confirmPassword && touched.confirmPassword}\n            >\n              <Element.RegisterFormPasswordInputContainer\n                error={errors.confirmPassword && touched.confirmPassword}\n                style={{\n                  borderColor:\n                    errors.confirmPassword && touched.confirmPassword\n                      ? '#F43F5E'\n                      : '#54ADFF',\n                }}\n              >\n                <Element.RegisterFormInput\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  value={values.confirmPassword}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <Element.PasswordIcon>\n                  <Element.EyeIcon\n                    onClick={handleClickShowConfirmPassword}\n                    error={errors.confirmPassword && touched.confirmPassword}\n                  >\n                    {showConfirmPassword ? (\n                      <IconEyeOpen\n                        fill={\n                          errors.confirmPassword && touched.confirmPassword\n                            ? theme[currentTheme].color.error\n                            : isPasswordValid\n                            ? theme[currentTheme].color.indicator\n                            : theme[currentTheme].color.btnDark\n                        }\n                      />\n                    ) : (\n                      <IconEyeClosed\n                        fill={\n                          errors.confirmPassword && touched.confirmPassword\n                            ? theme[currentTheme].color.error\n                            : isPasswordValid\n                            ? theme[currentTheme].color.indicator\n                            : theme[currentTheme].color.btnDark\n                        }\n                      />\n                    )}\n                  </Element.EyeIcon>\n                  {errors.confirmPassword &&\n                    touched.confirmPassword &&\n                    values.confirmPassword && (\n                      <Element.ErrorIcon\n                        onClick={() => {\n                          resetForm({\n                            values: { ...values, confirmPassword: '' },\n                          });\n                        }}\n                      >\n                        <IconCross fill={theme[currentTheme].color.error} />\n                      </Element.ErrorIcon>\n                    )}\n                </Element.PasswordIcon>\n              </Element.RegisterFormPasswordInputContainer>\n\n              {errors.confirmPassword && touched.confirmPassword && (\n                <Element.ErrorMessage>\n                  {errors.confirmPassword}\n                </Element.ErrorMessage>\n              )}\n            </Element.RegisterFormPasswordContainer>\n\n            {!emailExist && (\n              <Element.RegisterErrorMessage>\n                This email is already in use. Please, try with another email!\n              </Element.RegisterErrorMessage>\n            )}\n\n            <Element.RegisterBtn type=\"submit\" disabled={isSubmitting}>\n              Registration\n            </Element.RegisterBtn>\n            <Element.LoginText>\n              Already have an account?\n              <Element.LoginLink to={'/login'}>Log In</Element.LoginLink>\n            </Element.LoginText>\n          </Element.RegisterFormEl>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nimport { RegisterBackground, RegisterBorder } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <RegisterBackground>\n      <RegisterBorder>\n        <RegisterForm />\n      </RegisterBorder>\n    </RegisterBackground>\n  );\n};\n\nexport default RegisterPage;\n","import styled from 'styled-components';\nimport desktop_1x from '../../images/MainPageImages/bg-lg@1x.png';\nimport desktop_2x from '../../images/MainPageImages/bg-lg@2x.png';\nimport tablet_1x from '../../images/MainPageImages/bg-md@1x.png';\nimport tablet_2x from '../../images/MainPageImages/bg-md@2x.png';\nimport mobile_1x from '../../images/MainPageImages/bg-sm@1x.png';\nimport mobile_2x from '../../images/MainPageImages/bg-sm@2x.png';\n\nexport const RegisterBorder = styled.div`\n  padding: 60px 75px;\n  box-sizing: border-box;\n  width: 608px;\n  height: fit-content;\n  background: #ffffff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n\n  @media screen and (max-width: 767px) {\n    margin: 0 auto;\n    padding: 40px 12px;\n    max-width: 280px;\n\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 20px;\n  }\n`;\n\nexport const RegisterBackground = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 80px;\n  height: 100vh;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  background-image: url('${desktop_1x}');\n\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url('${desktop_2x}');\n  }\n\n  @media screen and (max-width: 1279px) {\n    background-image: url('${tablet_1x}');\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${tablet_2x}');\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-top: 44px;\n    background-image: url('${mobile_1x}');\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${mobile_2x}');\n    }\n  }\n`;\n"],"names":["RegisterFormEl","styled","form","_templateObject","_taggedTemplateLiteral","RegisterFormTitle","h1","_templateObject2","_ref","theme","color","secondary","RegisterFormUsernameContainer","div","_templateObject3","_ref2","error","_ref3","RegisterFormUsernameInputContainer","_templateObject4","_ref4","btnDark","RegisterFormEmailContainer","_templateObject5","_ref5","_ref6","RegisterFormEmailInputContainer","_templateObject6","_ref7","RegisterFormInput","Field","_templateObject7","ErrorIcon","span","_templateObject8","ErrorMessage","_templateObject9","_ref8","RegisterFormPasswordContainer","_templateObject10","_ref9","secure","_ref10","RegisterFormPasswordInputContainer","_templateObject11","_ref11","indicator","PasswordIcon","_templateObject12","EyeIcon","_templateObject13","CheckMarkIcon","_templateObject14","InfoMessage","_templateObject15","_ref12","RegisterErrorMessage","_templateObject16","_ref13","RegisterBtn","button","_templateObject17","_ref14","LoginText","p","_templateObject18","LoginLink","Link","_templateObject19","_ref15","registerSchema","Yup","shape","name","required","matches","email","password","min","max","confirmPassword","oneOf","data","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showConfirmPassword","setShowConfirmPassword","_useState5","_useState6","emailExist","setEmailExist","_useState7","_useState8","loading","setLoading","currentTheme","useAuth","navigate","useNavigate","dispatch","useDispatch","handleClickShowPassword","show","handleClickShowConfirmPassword","handleFormSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","credentials","wrap","_context","prev","next","resetForm","abrupt","register","sent","t0","console","finish","stop","_x","_x2","apply","arguments","_jsx","Formik","initialValues","validationSchema","validateOnChange","onSubmit","children","errors","setErrors","touched","handleChange","handleBlur","isSubmitting","handleSubmit","isPasswordValid","length","handleFieldChange","e","target","_objectSpread","_defineProperty","_jsxs","Element","style","borderColor","type","placeholder","value","onChange","onBlur","disabled","onClick","IconCross","fill","IconEyeOpen","IconEyeClosed","IconCheck","valid","to","RegisterBackground","RegisterBorder","RegisterForm","desktop_1x","desktop_2x","tablet_1x","tablet_2x","mobile_1x","mobile_2x"],"sourceRoot":""}