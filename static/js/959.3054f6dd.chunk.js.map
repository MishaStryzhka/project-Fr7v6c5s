{"version":3,"file":"static/js/959.3054f6dd.chunk.js","mappings":"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","sources":["components/Title/Titel.styled.js","components/Title/Title.js","components/OurFriends/OurFriends.styled.js","components/OurFriends/OurFriends.jsx","pages/mainPages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledTitel = styled.h1`\n  ${({ color }) => (color ? `color: ${color}` : `color: #111`)}\n  text-align: center;\n  font-family: Manrope;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n\n  padding-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 48px;\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 48px;\n    padding-top: 80px;\n  }\n`;\n","import { StyledTitel } from './Titel.styled';\n\nconst Title = ({ color, className, children }) => {\n  return (\n    <StyledTitel color={color} className={className}>\n      {children}\n    </StyledTitel>\n  );\n};\n\nexport default Title;\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\n    display:flex;\n    flex-wrap:wrap;\n    align-items:center;\n    flex-direction: column;\n    gap: 20px;\n    margin: 24px auto 75px;\n    @media screen and (min-width: 768px) {\n        /* padding: 0 32px; */\n        flex-direction: row;\n        gap:32px;\n        margin: 40px 32px 172px;\n    }\n    @media screen and (min-width: 1280px) {\n        align-items:baseline;\n        margin: 60px 16px 69px;\n  }\n\n`\n\nexport const Item = styled.li`\n    /* padding-top: 16px;\n    padding-left:12px; */\n    height:240px;\n    width:280px;\n    display:flex;\n    flex-direction: column;\n    background-color:#fff;\n    box-shadow:${({ theme }) => theme.boxShadow};\n    border-radius:40px; \n    @media screen and (min-width: 768px) {\n        height:275px;\n        width:320px;\n        flex-basis: calc((100% - 32px) / 2);\n    } \n    @media screen and (min-width: 1280px) {\n        height:287px;\n        width:394px;\n        flex-basis: calc((100% - 64px) / 3);\n  }\n`\n\nexport const CardTitle = styled.h2`\nmargin:16px auto;\ntext-align: center;\nfont-size: 20px;\nfont-weight: 700;\nline-height: normal;\ncolor:${({ theme }) => theme.color.btnDark};\n`\nexport const WrapImage = styled.div`\nmargin-left:12px;\nwidth: 100px;\nheight: 68px;\n@media screen and (min-width: 768px) {\n    width: 124px;\n    height: 88px;\n    }\n@media screen and (min-width: 1280px) {\n    width: 146px;\n    height: 104px;\n  }\n`\n\nexport const Image = styled.img`\ndisplay: block;\nmax-width: 100%;\nheight: auto;\n`\n\nexport const MainWrap = styled.div`\ndisplay: flex;\ngap:12px;\n@media screen and (min-width: 1280px) {\n    gap:20px;\n  }\n`\nexport const TextWrap = styled.div`\ndisplay:flex;\nflex-direction: column;\ngap: 12px;\n@media screen and (min-width: 768px) {\n    gap: 16px;\n    }\n    @media screen and (min-width: 1280px) {\n    gap:12px;\n  }\n    \n`\nexport const Text = styled.p`\ncolor: ${({ theme }) => theme.color.secondary};\n\nfont-size: 12px;\nfont-weight: 600;\nline-height: normal;\n@media screen and (min-width: 768px) {\n    font-size: 14px;\n    }\n@media screen and (min-width: 1280px) {\n   font-size:16px;\n  }\n    `\n\nexport const Link = styled.a`\ncolor: ${({ theme }) => theme.color.secondary};\ntext-decoration:none;\nfont-size: 12px;\nfont-weight: 400;\nline-height: normal;\n:hover{\n    color: ${({ theme }) => theme.color.btnDark}\n}\n@media screen and (min-width: 768px) {\n    font-size: 14px;\n    }\n@media screen and (min-width: 1280px) {\n   font-size:16px;\n  }\n`\n\nexport const Option = styled.option`\nborder:none;\nfont-size: 12px;\nfont-weight: 400;\nline-height: normal;\ncolor: ${({ theme }) => theme.color.secondary};\noutline: none;\n:hover{\n    background-color: ${({ theme }) => theme.color.btnDark}\n}\n`\nexport const Select = styled.select`\nborder:none;\nfont-size: 12px;\nfont-weight: 400;\nline-height: normal;\ncolor: ${({ theme }) => theme.color.secondary};\noutline: none;\n:hover{\n    color: ${({ theme }) => theme.color.btnDark}\n}\n@media screen and (min-width: 768px) {\n    font-size: 14px;\n    }\n@media screen and (min-width: 1280px) {\n   font-size:16px;\n  }\n`","import { useEffect, useState } from 'react';\nimport friends from '../../path/to/friends.json'\nimport * as Component from './OurFriends.styled'\n\nconst OurFriends = () => {\n    const [, setCurrentTime] = useState(new Date());\n    const daysOfWeek = [\"MN\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\", \"SU\"]\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setCurrentTime(new Date());\n      }, 1000);\n  \n      return () => {\n        clearInterval(interval);\n      };\n    }, []);\nreturn(\n    <Component.List>\n        {friends.map(({id,title, url,address,imageUrl,addressUrl,email,phone, workDays,isOpen})=>{\n           \n             return(\n                <Component.Item key={id}>\n                    <Component.CardTitle><a href={url} target=\"_blank\"\n                  rel=\"noopener noreferrer\">{title}</a></Component.CardTitle>\n                    <Component.MainWrap>\n                        <Component.WrapImage>\n                            <Component.Image src={imageUrl} alt={title}/>\n                        </Component.WrapImage>\n                    <Component.TextWrap>\n                        <div>\n                        <Component.Text>Time</Component.Text>\n                    {workDays ? \n                    <Component.Select name=\"days\" id=\"days\"> hgvghgvh\n                        {workDays.map((day, index)=>{\n                            const dayOfWeek = daysOfWeek[index];\n                             return(\n                                    <Component.Option key={index} value={day}>{dayOfWeek}  {day.from}- {day.to}  \n                                    {day.isOpen === true ?  \"\" : \"Closed\"}</Component.Option>\n                            \n                              )\n                        })}\n                    </Component.Select> : <Component.Link>Day and night</Component.Link>}\n                    </div>\n                    \n                    <div><Component.Text>Address</Component.Text>\n                  {address ?  <Component.Link href={addressUrl} target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                    {address}\n                    {/* {address.length > 32 ? address.substring(0, 28) + '...' : address} */}\n                    </Component.Link> : <Component.Link>Only website</Component.Link>}</div>\n                    \n                  <div> <Component.Text>Email</Component.Text>\n                   {email? <Component.Link href={`mailto:${email}`} target=\"_blank\"\n                  rel=\"noopener noreferrer\">{email}</Component.Link> : <Component.Link href={url} target=\"_blank\"\n                  rel=\"noopener noreferrer\">Only website</Component.Link>}</div>\n                   \n                  <div><Component.Text>Phone</Component.Text>\n                  {phone? <Component.Link href={`tel:${phone}`}>{phone}</Component.Link>: <Component.Link href={`mailto:${email}`} target=\"_blank\"\n                  rel=\"noopener noreferrer\">Email only</Component.Link>}\n                  </div>\n                    </Component.TextWrap>\n                    </Component.MainWrap>\n                </Component.Item>\n             )\n        })\n           \n            }\n    </Component.List>\n)\n}\n\nexport default OurFriends","\nimport OurFriends from 'components/OurFriends/OurFriends';\nimport Title from 'components/Title/Title';\nimport theme from 'components/theme';\nimport { useAuth } from 'hooks';\nimport { Helmet } from 'react-helmet';\n\nconst OurFriendsPage = () => {\n  const { currentTheme } = useAuth();\n  return (\n    <>\n      <Helmet>\n        <title>Our Friends</title>\n      </Helmet>\n\n      <Title color={theme[currentTheme].color.secondary}>Our Friends</Title>\n      <OurFriends/>\n    </>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["StyledTitel","styled","h1","_templateObject","_taggedTemplateLiteral","_ref","color","concat","className","children","_jsx","List","ul","Item","li","_templateObject2","theme","boxShadow","CardTitle","h2","_templateObject3","_ref2","btnDark","WrapImage","div","_templateObject4","Image","img","_templateObject5","MainWrap","_templateObject6","TextWrap","_templateObject7","Text","p","_templateObject8","_ref3","secondary","Link","a","_templateObject9","_ref4","_ref5","Option","option","_templateObject10","_ref6","_ref7","Select","select","_templateObject11","_ref8","_ref9","_useState","useState","Date","setCurrentTime","_slicedToArray","daysOfWeek","useEffect","interval","setInterval","clearInterval","Component","friends","map","id","title","url","address","imageUrl","addressUrl","email","phone","workDays","isOpen","_jsxs","href","target","rel","src","alt","name","day","index","dayOfWeek","value","from","to","currentTheme","useAuth","_Fragment","Helmet","Title","OurFriends"],"sourceRoot":""}