{"version":3,"file":"static/js/771.572dfb92.chunk.js","mappings":"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","sources":["components/OurFriends/OurFriends.styled.js","components/OurFriends/TimeList.styled.jsx","components/OurFriends/TimeList.jsx","components/OurFriends/OurFriends.jsx","pages/mainPages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const List = styled.ul`\n    display:flex;\n    flex-wrap:wrap;\n    align-items:center;\n    flex-direction: column;\n    gap: 20px;\n    margin: 24px auto 75px;\n    @media screen and (min-width: 768px) {\n        \n        flex-direction: row;\n        gap:32px;\n        margin: 40px 32px 172px;\n    }\n    @media screen and (min-width: 1280px) {\n        align-items:baseline;\n        margin: 60px 16px 69px;\n  }\n\n`\n\nexport const Item = styled.li`\n    height:240px;\n    width:280px;\n    display:flex;\n    flex-direction: column;\n    background-color:#fff;\n    box-shadow:${({ theme }) => theme.boxShadow};\n    border-radius:40px; \n    @media screen and (min-width: 768px) {\n        height:275px;\n        width:320px;\n        flex-basis: calc((100% - 32px) / 2);\n    } \n    @media screen and (min-width: 1280px) {\n        height:287px;\n        width:394px;\n        flex-basis: calc((100% - 64px) / 3);\n  }\n`\n\nexport const CardTitle = styled.h2`\nmargin:16px auto;\ntext-align: center;\nfont-size: 20px;\nfont-weight: 700;\nline-height: normal;\ncolor:${({ theme }) => theme.color.btnDark};\n`\nexport const WrapImage = styled.div`\nmargin-left:12px;\nwidth: 100px;\nheight: 68px;\n@media screen and (min-width: 768px) {\n    width: 124px;\n    height: 88px;\n    }\n@media screen and (min-width: 1280px) {\n    width: 146px;\n    height: 104px;\n  }\n`\n\nexport const Image = styled.img`\ndisplay: block;\nmax-width: 100%;\nheight: auto;\n`\n\nexport const MainWrap = styled.div`\ndisplay: flex;\ngap:12px;\n@media screen and (min-width: 1280px) {\n    gap:20px;\n  }\n`\nexport const TextWrap = styled.div`\ndisplay:flex;\nflex-direction: column;\ngap: 12px;\n@media screen and (min-width: 768px) {\n    gap: 16px;\n    }\n    @media screen and (min-width: 1280px) {\n    gap:12px;\n  }\n    \n`\nexport const Text = styled.p`\ncolor: ${({ theme }) => theme.color.secondary};\n\nfont-size: 12px;\nfont-weight: 600;\nline-height: normal;\n@media screen and (min-width: 768px) {\n    font-size: 14px;\n    }\n@media screen and (min-width: 1280px) {\n   font-size:16px;\n  }\n    `\nexport const TextTime = styled.p`\ncolor: ${({ theme }) => theme.color.secondary};\n\nfont-size: 12px;\nfont-weight: 400;\nline-height: normal;\n@media screen and (min-width: 768px) {\n    font-size: 14px;\n    }\n@media screen and (min-width: 1280px) {\n   font-size:16px;\n  }\n`\nexport const Link = styled.a`\ncursor:pointer;\ncolor: ${({ theme }) => theme.color.secondary};\ntext-decoration:none;\nfont-size: 12px;\nfont-weight: 400;\nline-height: normal;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover{\n    color: ${({ theme }) => theme.color.btnDark}\n}\n@media screen and (min-width: 768px) {\n    font-size: 14px;\n    }\n@media screen and (min-width: 1280px) {\n   font-size:16px;\n  }\n`\n\n\n","import styled from 'styled-components'\n\nexport const ListTime = styled.ul`\n      cursor: pointer;    \nposition:relative;\nborder:none;\nfont-size: 12px;\nfont-weight: 400;\nline-height: normal;\ncolor: ${({ theme }) => theme.color.secondary};\noutline: none;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover{\n    color: ${({ theme }) => theme.color.btnDark}\n}\n@media screen and (min-width: 768px) {\n    font-size: 14px;\n    }\n@media screen and (min-width: 1280px) {\n   font-size:16px;\n  }\n`\n\nexport const TimeItem = styled.li`\n\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\ncolor: ${({ theme }) => theme.color.secondary};\ndisplay:flex;\njustify-content: space-between;\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover{\n    background-color: ${({ theme }) => theme.color.btnDark}\n}\n`\n\nexport const TimeWrap =styled.div`\nposition: absolute;\nbackground-color: ${({ theme }) => theme.color.cardBG};\nborder: 1px solid ${({ theme }) => theme.color.btnDark};\npadding:12px;\ndisplay:flex;\ngap:6px;\nborder-radius: 8px;\nbox-shadow: ${({ theme }) => theme.boxShadow};\n`\n\nexport const Text = styled.span`\n    margin-left: 12px;\n`\n\nexport const TimeTitle = styled.p`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n`\n\n\n   \n","import { useState } from \"react\";\nimport { ListTime, Text, TimeItem, TimeTitle, TimeWrap } from \"./TimeList.styled\";\nimport IconChevronUp from \"../../images/icons/IconChevronUp\"\nimport IconChevronDown from \"../../images/icons/IconChevronDown\"\nimport theme from 'components/theme';\nimport { useAuth } from \"hooks\";\n\nconst TimeList = ({workDays}) =>{\n    const { currentTheme } = useAuth();\n    const [openList, setOpenList] = useState(false);\n\n    const daysOfWeek = [\"MN\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\", \"SU\"]\n\n    const handleOpenList = (e) => setOpenList(openList=>!openList)\n    return(\n        <ListTime name=\"days\" onClick={(e) => handleOpenList()}>\n                      <TimeTitle>working hours\n                      {openList ? <IconChevronUp fill={theme[currentTheme].color.btnDark}/>\n                      :<IconChevronDown fill={theme[currentTheme].color.btnLogOut}/>}</TimeTitle>\n                      <TimeWrap style={{display: openList ? \"block\":\"none\"}}>\n                        {workDays.map((day, index)=>{\n                            const dayOfWeek = daysOfWeek[index];\n                             return(\n                                    <TimeItem key={index} value={day}><span>{dayOfWeek}</span> \n                                    <Text>{day.from}- {day.to}</Text>    \n                                    {day.isOpen === true ?  \"\" : \"Closed\"}</TimeItem>\n                            \n                              );\n                           \n                        })}\n                    </TimeWrap>\n         </ListTime>\n    )\n}\n\nexport default TimeList","import friends from '../../path/to/friends.json'\nimport { CardTitle, Image, Item, Link, List, MainWrap, Text, TextTime, TextWrap, WrapImage } from './OurFriends.styled';\nimport TimeList from './TimeList';\n// import React from 'react';\nimport ImagePlaceholder from '../../images/OurFriendsPageImages/images_placeholder.png'\n\n\nconst OurFriends = () => {\n   \n\nreturn(\n\n    <List>\n     {friends.map(({id,title, url,address,imageUrl,addressUrl,email,phone, workDays})=>{\n       \n             return(\n             \n                <Item key={id}>\n                    <CardTitle><a href={url} target=\"_blank\"\n                  rel=\"noopener noreferrer\">{title}</a></CardTitle>\n                 \n                    <MainWrap>\n                        <WrapImage>\n                           {imageUrl?<Image src={imageUrl} alt={title}/>:<Image src={ImagePlaceholder} alt=\"Placeholder\"/>} \n                        </WrapImage>\n                    <TextWrap>\n                        <div>\n                        <Text>Time</Text>\n                    {workDays ? \n                    <TimeList workDays={workDays}/>\n                     : <TextTime>Day and night</TextTime>}\n                    </div>\n                    \n                    <div><Text>Address</Text>\n                  {address ?  <Link href={addressUrl} target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                    {address}\n                    </Link> : <Link>Only website</Link>}</div>\n                    \n                  <div> <Text>Email</Text>\n                   {email? <Link href={`mailto:${email}`} target=\"_blank\"\n                  rel=\"noopener noreferrer\">{email}</Link> : <Link href={url} target=\"_blank\"\n                  rel=\"noopener noreferrer\">Only website</Link>}</div>\n                   \n                  <div><Text>Phone</Text>\n                  {phone? <Link href={`tel:${phone}`}>{phone}</Link>: <Link href={`mailto:${email}`} target=\"_blank\"\n                  rel=\"noopener noreferrer\">Email only</Link>}\n                  </div>\n                    </TextWrap>\n                    </MainWrap>\n                </Item>\n             )\n        })\n           \n            }\n    </List>\n\n)\n}\n\nexport default OurFriends","\nimport OurFriends from 'components/OurFriends/OurFriends';\nimport Title from 'components/Title/Title';\nimport theme from 'components/theme';\nimport { useAuth } from 'hooks';\nimport { Helmet } from 'react-helmet';\n\nconst OurFriendsPage = () => {\n  const { currentTheme } = useAuth();\n  return (\n    <>\n      <Helmet>\n        <title>Our Friends</title>\n      </Helmet>\n\n      <Title color={theme[currentTheme].color.secondary}>Our Friends</Title>\n      <OurFriends/>\n    </>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","_ref","theme","boxShadow","CardTitle","h2","_templateObject3","_ref2","color","btnDark","WrapImage","div","_templateObject4","Image","img","_templateObject5","MainWrap","_templateObject6","TextWrap","_templateObject7","Text","p","_templateObject8","_ref3","secondary","TextTime","_templateObject9","_ref4","Link","a","_templateObject10","_ref5","_ref6","ListTime","TimeItem","TimeWrap","cardBG","_ref7","span","TimeTitle","workDays","currentTheme","useAuth","_useState","useState","_useState2","_slicedToArray","openList","setOpenList","daysOfWeek","_jsxs","name","onClick","e","children","_jsx","IconChevronUp","fill","IconChevronDown","btnLogOut","style","display","map","day","index","dayOfWeek","value","from","to","isOpen","friends","id","title","url","address","imageUrl","addressUrl","email","phone","href","target","rel","src","alt","TimeList","concat","_Fragment","Helmet","Title","OurFriends"],"sourceRoot":""}