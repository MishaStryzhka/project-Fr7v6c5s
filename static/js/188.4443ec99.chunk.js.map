{"version":3,"file":"static/js/188.4443ec99.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/authPages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\nimport IconCross from 'images/icons/IconCross';\nimport IconEyeClosed from 'images/icons/IconEyeClosed'\n\nexport const FormStyled = styled(Form)`\n width: 280px;\nmargin: auto;\ndisplay:flex;\nflex-direction:column;\nalign-items: center;\njustify-content: center;\npadding: 40px 12px;\nborder-radius: 20px;\nmargin-top: 40px;\n\nbox-shadow:  ${({ theme }) => theme.boxShadow};\n/* rgba(136, 198, 253, 0.19); */\n@media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 75px;\n    margin-top: 80px;\n    border-radius: 40px;\n  }\n`\n\nexport const Wrap = styled.div`\ndisplay: flex;\nflex-direction:column;\ngap:14px;\nmargin-bottom: 110px;\n@media screen and (min-width: 768px) {\n    gap:32px; \n    margin-bottom: 60px;\n}\n`\n\nexport const Title = styled.h2`\ntext-align: center;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\nmargin-bottom:20px;\ncolor:${({ theme }) => theme.color.secondary};\n@media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom:40px;\n}\n\n`\n\nexport const FieldStyled = styled(Field)`\ndisplay: block;\nposition: relative;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.5;\nletter-spacing: 0.64px;\npadding: 12px 16px;\nwidth:256px;\nborder-radius: 40px;\nborder: 1px solid ${({ theme }) => theme.color.btnDark};\ncolor: #888;\noverflow: hidden;\n@media screen and (min-width: 768px) {\n    width:458px;\n}\n`\n\nexport const FieldError = styled(Field)`\nposition:relative;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.5;\nletter-spacing: 0.64px;\npadding: 12px 16px;\nwidth:256px;\nborder-radius: 40px;\nborder: 1px solid ${({ theme }) => theme.color.error};\ncolor: #888;\n@media screen and (min-width: 768px) {\n    width:458px;}\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nwidth: 256px;\nheight: 48px;\npadding: 10px 28px;\njustify-content: center;\nalign-items: center;\nborder-radius: 40px;\nfont-size: 20px;\nfont-style: normal;\nfont-weight: 600;\nline-height: normal;\nletter-spacing: 0.8px;\nborder: transparent;\nmargin-bottom: 8px;\n\ncolor:${({ theme }) => theme.color.background};\nbackground-color: ${({ theme }) => theme.color.btnDark};\n@media screen and (min-width: 768px) {\n    width: 478px;\n    margin-bottom: 20px;\n}\n`\n\nexport const StyledNavLink = styled(NavLink)`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\ntext-decoration-line: underline;\n\ncolor: ${({ theme }) => theme.color.btnDark};\n`\n\nexport const Text = styled.p`\ntext-align: center;\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\n\ncolor: #888;\n`\n\nexport const TextError = styled.div`\nfont-size: 12px;\nline-height: 1.3;\nfont-weight: 400;\ncolor:${({ theme }) => theme.color.error};\nmargin-top: 4px;\nmargin-left: 16px;\n`\n\n\nexport const SuccessText = styled.div`\nmargin-top:4px;\nmargin-left: 16px;\nfont-size: 12px;\nline-height: 1.3;\nfont-weight: 400;\ncolor:${({ theme }) => theme.color.indicator};\n`\n\nexport const IconCrossStyle = styled( IconCross )`\nposition:absolute;\ntop:12px;\nright: 16px;\n`\n\nexport const IconEyeClosedStyle = styled (IconEyeClosed)`\nposition:absolute;\ntop:12px;\nright: 16px;\n`","import {Title, FieldStyled, FormStyled, Button, Text, Wrap, StyledNavLink, TextError, FieldError, SuccessText, IconCrossStyle, IconEyeClosedStyle} from './LoginForm.styled'\n// import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup'\nimport theme from 'components/theme';\nimport { useAuth } from 'hooks';\n\n\nconst validationSchema = Yup.object().shape({\n    email:Yup.string().required(\"Field is a required\").email('Enter a valid Email'),\n    password:Yup.string().required(\"Field is a required\")\n    .min(6, \"Password must be at least 8 characters\")\n    .max(16, \"Password must be less at 16 characters\")\n    .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,16}$/,\n        'Password must contain at least 1 uppercase letter, 1 lowercase letter and 1 number'\n      )\n      \n    })\n   \n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState('');\n    const {  currentTheme } = useAuth();\n\n\n    const handleLogInSubmit = async (values) => {\n    try {\n     const res = await dispatch(\n        logIn({\n           email: values.email,\n           password: values.password,\n         })\n       );\n       if (res.error) {\n        console.log(res.error);\n      } else {\n        console.log(res);\n        navigate('/user');\n      }\n     } catch (error) {\n      console.error(error);\n     }\n    }\n\nreturn(\n    <> \n     <Formik\n      initialValues={{\n        email: '',\n        password: ''\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleLogInSubmit}\n      >\n         {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n     <FormStyled  onSubmit={handleSubmit}>\n        <Title>Login</Title>\n        <Wrap>\n        {errors.email && touched.email && errors.email ? \n        <label style={{position:'relative'}}><FieldError type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Email'\n             required/>\n             <IconCrossStyle fill={theme[currentTheme].color.error}/>\n             <TextError>{errors.email && touched.email && errors.email}</TextError>\n             </label>:\n            <FieldStyled  type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            style={{borderColor:touched.email? ({ theme }) => theme.color.indicator:({ theme }) => theme.color.btnDark}}\n             placeholder='Email'\n             required/>}\n\n          {errors.password && touched.password && errors.password ?\n           <label style={{position:'relative'}}>\n           <FieldError type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Password'\n             required/>\n             <TextError>{errors.password && touched.password && errors.password}</TextError>\n             </label>:\n             <label style={{position:'relative'}}>\n            <FieldStyled  type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Password'\n           // style={{borderColor: ({ theme }) => theme.color.btnDark}}\n             required/>\n           <IconEyeClosedStyle/>\n           {!errors.password && touched.password && <SuccessText>Password is secure</SuccessText>  }\n        </label> \n            } \n       </Wrap>\n        <Button type='submit'>Login</Button>\n        <Text>Don't have an account?<StyledNavLink to=\"/register\">Register</StyledNavLink></Text>\n     </FormStyled>\n     )}\n     </Formik>\n    </>\n   \n)\n}\n\nexport default LoginForm\n\n\n","const { default: LoginForm } = require(\"components/LoginForm/LoginForm\")\n\nconst LoginPage = () => {\n  return<LoginForm/> ;\n};\n\nexport default LoginPage;\n"],"names":["FormStyled","styled","Form","_templateObject","_taggedTemplateLiteral","_ref","theme","boxShadow","Wrap","div","_templateObject2","Title","h2","_templateObject3","_ref2","color","secondary","FieldStyled","Field","_templateObject4","_ref3","btnDark","FieldError","_templateObject5","_ref4","error","Button","button","_templateObject6","_ref5","background","_ref6","StyledNavLink","NavLink","_templateObject7","_ref7","Text","p","_templateObject8","TextError","_templateObject9","_ref8","SuccessText","_templateObject10","_ref9","indicator","IconCrossStyle","IconCross","_templateObject11","IconEyeClosedStyle","IconEyeClosed","_templateObject12","validationSchema","Yup","shape","email","required","password","min","max","matches","dispatch","useDispatch","navigate","useNavigate","currentTheme","useAuth","handleLogInSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","res","wrap","_context","prev","next","logIn","sent","console","log","t0","stop","_x","apply","arguments","_jsx","_Fragment","children","Formik","initialValues","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","_jsxs","style","position","type","name","value","onChange","onBlur","placeholder","fill","borderColor","to","LoginForm","require","default"],"sourceRoot":""}