{"version":3,"file":"static/js/684.69e37bf1.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/authPages/LoginPage.jsx","pages/authPages/RegisterPage.styled.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\nimport IconCross from 'images/icons/IconCross';\n\nexport const FormStyled = styled(Form)`\nwidth: 280px;\nmargin: auto;\ndisplay:flex;\nflex-direction:column;\nalign-items: center;\njustify-content: center;\npadding: 40px 12px;\nborder-radius: 20px;\nmargin-top: 40px;\nbackground-color:#FFF;\nbox-shadow:  ${({ theme }) => theme.boxShadow};\n\n@media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 75px;\n    margin-top: 80px;\n    border-radius: 40px;\n  }\n`\n\nexport const Wrap = styled.div`\ndisplay: flex;\nflex-direction:column;\ngap:14px;\nmargin-bottom: 110px;\n@media screen and (min-width: 768px) {\n    gap:32px; \n    margin-bottom: 60px;\n}\n`\n\nexport const Title = styled.h2`\ntext-align: center;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\nmargin-bottom:20px;\ncolor:${({ theme }) => theme.color.secondary};\n@media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom:40px;\n}\n\n`\n\nexport const FieldStyled = styled(Field)`\ndisplay: block;\nposition: relative;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.5;\nletter-spacing: 0.64px;\npadding: 12px 16px;\nwidth:256px;\nborder-radius: 40px;\nborder: 1px solid\n    ${({ theme, error, valid }) =>\n      error\n        ? theme.color.error\n        : valid\n        ? theme.color.indicator\n        : theme.color.btnDark};\noutline: none;\ncolor: #888;\n:focus{\n    border: 2px solid\n    ${({ theme, error, valid }) =>\n      error\n        ? theme.color.error\n        : valid\n        ? theme.color.indicator\n        : theme.color.btnDark};\n}\n@media screen and (min-width: 768px) {\n    width:458px;\n}\n`\n\nexport const FieldError = styled(Field)`\nposition:relative;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.5;\nletter-spacing: 0.64px;\npadding: 12px 16px;\nwidth:256px;\nborder-radius: 40px;\noutline:none;\nborder: 1px solid ${({ theme }) => theme.color.error};\ncolor: #888;\n@media screen and (min-width: 768px) {\n    width:458px;}\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nwidth: 256px;\nheight: 48px;\npadding: 10px 28px;\njustify-content: center;\nalign-items: center;\nborder-radius: 40px;\nfont-size: 20px;\nfont-style: normal;\nfont-weight: 600;\nline-height: normal;\nletter-spacing: 0.8px;\nborder: transparent;\nmargin-bottom: 8px;\n\ncolor:${({ theme }) => theme.color.background};\nbackground-color: ${({ theme }) => theme.color.btnDark};\n@media screen and (min-width: 768px) {\n    width: 478px;\n    margin-bottom: 20px;\n}\n`\n\nexport const StyledNavLink = styled(NavLink)`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\ntext-decoration-line: underline;\n\ncolor: ${({ theme }) => theme.color.btnDark};\n`\n\nexport const Text = styled.p`\ntext-align: center;\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\n\ncolor: #888;\n`\n\nexport const TextError = styled.div`\nfont-size: 12px;\nline-height: 1.3;\nfont-weight: 400;\ncolor:${({ theme }) => theme.color.error};\nmargin-top: 4px;\nmargin-left: 16px;\n`\n\n\nexport const SuccessText = styled.div`\nmargin-top:4px;\nmargin-left: 16px;\nfont-size: 12px;\nline-height: 1.3;\nfont-weight: 400;\ncolor:${({ theme }) => theme.color.indicator};\n`\n\nexport const IconCrossStyle = styled(IconCross)`\nposition:absolute;\ntop:12px;\nright: 16px;\n`\n\nexport const WrapIcons = styled.div`\nposition:absolute;\ntop:12px;\nright: 16px;\ndisplay:flex;\ngap:8px;\n@media screen and (min-width: 768px) {\n    gap:15px\n}\n`\n\n","import * as Component from './LoginForm.styled'\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup'\nimport { useAuth } from 'hooks';\nimport theme from 'components/theme';\nimport IconCheck from 'images/icons/IconCheck';\nimport IconEyeClosed from 'images/icons/IconEyeClosed'\nimport IconEyeOpen from 'images/icons/IconEyeOpen';\nimport IconCross from 'images/icons/IconCross';\nimport Notiflix from 'notiflix';\n\n\n\nconst validationSchema = Yup.object().shape({\n    email:Yup.string().required(\"Field is a required\").email('Enter a valid Email'),\n    password:Yup.string().required(\"Field is a required\")\n    .min(6, \"Password must be at least 6 characters\")\n    .max(16, \"Password must be less at 16 characters\")\n    .matches(\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,16}$/,\n        'Password must contain at least 1 uppercase letter, 1 lowercase letter and 1 number'\n      )\n      \n    })\n   \n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { currentTheme } = useAuth();\n    const [openPassword, setOpenPassword] = useState(false);\n\n    const handleOpenPassword = () => setOpenPassword(openPassword => !openPassword);\n\n   const handleLogInSubmit = async (values) => {\n     const res = await dispatch(\n        logIn({\n           email: values.email,\n           password: values.password,\n         })\n       );\n       if (res.error || res.payload.status === 401) {\n        Notiflix.Notify.failure(res.payload.message);\n      } else {\n        navigate('/user');\n      }\n    }\n    \nreturn(\n    <Formik\n      initialValues={{\n        email: '',\n        password: ''\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleLogInSubmit}\n      >\n         {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => {\n          const isPasswordValid = values.password && values.password.length>=6;\n          \n    return(\n     <Component.FormStyled  onSubmit={handleSubmit}>\n        <Component.Title>Login</Component.Title>\n        <Component.Wrap>\n        \n         <label style={{position:'relative'}}>\n              <Component.FieldStyled \n                error={errors.email && touched.email && errors.email}\n                valid={values.email}\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder='Email'\n                required/>\n              {errors.email && touched.email && errors.email  && <Component.IconCrossStyle fill={theme[currentTheme].color.error}/>}\n              {values.email && !errors.email &&  <Component.WrapIcons><IconCheck fill={theme[currentTheme].color.indicator}/></Component.WrapIcons>}\n              <Component.TextError>{errors.email && touched.email && errors.email}</Component.TextError>\n          </label>\n        \n          <label style={{position:'relative'}}>\n              <Component.FieldStyled\n                error={errors.password && touched.password && errors.password}\n                type={openPassword ? 'text':'password'}\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder='Password'\n                style={{\n                  borderColor:\n                    errors.password && touched.password && errors.password\n                      ? theme[currentTheme].color.error\n                      : isPasswordValid\n                      ? theme[currentTheme].color.indicator\n                      : theme[currentTheme].color.btnDark,\n                }}\n                required/>\n                \n              <Component.WrapIcons>\n                <div onClick={handleOpenPassword}>\n                  {openPassword ? \n                      <IconEyeOpen\n                      fill={errors.password && touched.password\n                        ? theme[currentTheme].color.error\n                        : isPasswordValid\n                        ? theme[currentTheme].color.btnLogOut \n                        : theme[currentTheme].color.btnDark}/> :\n                  <IconEyeClosed\n                      fill={errors.password && touched.password\n                        ? theme[currentTheme].color.error\n                        : isPasswordValid\n                        ? theme[currentTheme].color.btnLogOut \n                        : theme[currentTheme].color.btnDark}/>\n                    } \n                </div>\n              {errors.password && touched.password && errors.password  && <IconCross fill={theme[currentTheme].color.error}/>}\n              {values.password && !errors.password &&  <IconCheck fill={theme[currentTheme].color.indicator}/>}\n              </Component.WrapIcons>\n\n          \n          \n\n                  {errors.password && touched.password && errors.password &&\n                  <Component.TextError>{errors.password}</Component.TextError>}\n                  {!errors.password && touched.password && <Component.SuccessText>Password is secure</Component.SuccessText>}\n              </label> \n        </Component.Wrap>\n        <Component.Button type='submit'>Login</Component.Button>\n        <Component.Text>Don't have an account?<Component.StyledNavLink to=\"/register\">Register</Component.StyledNavLink></Component.Text>\n     </Component.FormStyled>\n           )\n            }}\n        </Formik>\n      )\n    };\nexport default LoginForm","import { Helmet } from \"react-helmet\";\nimport { RegisterBackground } from \"./RegisterPage.styled\";\n\nconst { default: LoginForm } = require(\"components/LoginForm/LoginForm\")\n\nconst LoginPage = () => {\n  return( \n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <RegisterBackground>\n        <LoginForm/>\n      </RegisterBackground>\n    </>\n  ) ;\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\nimport desktop_1x from '../../images/MainPageImages/bg-lg@1x.png';\nimport desktop_2x from '../../images/MainPageImages/bg-lg@2x.png';\nimport tablet_1x from '../../images/MainPageImages/bg-md@1x.png';\nimport tablet_2x from '../../images/MainPageImages/bg-md@2x.png';\nimport mobile_1x from '../../images/MainPageImages/bg-sm@1x.png';\nimport mobile_2x from '../../images/MainPageImages/bg-sm@2x.png';\n\nexport const RegisterBorder = styled.div`\n  margin-top: 40px;\n  padding: 60px 75px;\n  box-sizing: border-box;\n  width: 608px;\n  height: fit-content;\n  background: #ffffff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 80px;\n    margin: 0 auto;\n    padding: 40px 12px;\n    max-width: 280px;\n\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 80px;\n  }\n`;\n\nexport const RegisterBackground = styled.div`\n  display: flex;\n  justify-content: center;\n  // padding-top: 80px;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  background-image: url('${desktop_1x}');\n\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url('${desktop_2x}');\n  }\n\n  @media screen and (max-width: 1279px) {\n    background-image: url('${tablet_1x}');\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${tablet_2x}');\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    // padding-top: 44px;\n    background-image: url('${mobile_1x}');\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${mobile_2x}');\n    }\n  }\n`;\n"],"names":["FormStyled","styled","Form","_templateObject","_taggedTemplateLiteral","_ref","theme","boxShadow","Wrap","div","_templateObject2","Title","h2","_templateObject3","_ref2","color","secondary","FieldStyled","Field","_templateObject4","_ref3","error","valid","indicator","btnDark","_ref4","Button","_templateObject5","_ref5","button","_templateObject6","_ref6","background","_ref7","StyledNavLink","NavLink","_templateObject7","_ref8","Text","p","_templateObject8","TextError","_templateObject9","_ref9","SuccessText","_templateObject10","_ref10","IconCrossStyle","IconCross","_templateObject11","WrapIcons","_templateObject12","validationSchema","Yup","shape","email","required","password","min","max","matches","dispatch","useDispatch","navigate","useNavigate","currentTheme","useAuth","_useState","useState","_useState2","_slicedToArray","openPassword","setOpenPassword","handleOpenPassword","handleLogInSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","res","wrap","_context","prev","next","logIn","sent","payload","status","Notiflix","failure","message","stop","_x","apply","arguments","_jsx","Formik","initialValues","onSubmit","children","errors","touched","handleChange","handleBlur","handleSubmit","isPasswordValid","length","_jsxs","Component","style","position","type","name","value","onChange","onBlur","placeholder","fill","IconCheck","borderColor","onClick","IconEyeOpen","btnLogOut","IconEyeClosed","to","LoginForm","require","default","_Fragment","Helmet","RegisterBackground","RegisterBorder","desktop_1x","desktop_2x","tablet_1x","tablet_2x","mobile_1x","mobile_2x"],"sourceRoot":""}