{"version":3,"file":"static/js/188.827eccfd.chunk.js","mappings":"0PAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8bAsBVE,EAAOF,EAAAA,GAAAA,IAAH,uLAWJG,EAAQH,EAAAA,GAAAA,GAAH,8OAcLI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kVAuBXM,IAJaN,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,iEAIDA,EAAAA,GAAAA,OAAH,0cAwBNO,GAAgBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sLAWbS,EAAOT,EAAAA,GAAAA,EAAH,sKAWJU,EAAYV,EAAAA,GAAAA,IAAH,6G,iDCjHhBW,EAAmBC,EAAAA,KAAaC,MAAM,CACxCC,MAAMF,EAAAA,KAAaG,SAAS,uBAAuBD,MAAM,uBACzDE,SAASJ,EAAAA,KAAaG,SAAS,uBAC9BE,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRC,QACG,0CACA,wFAqFR,EA/EkB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcS,EAAd,KACA,GAAgCD,EAAAA,EAAAA,UAAS,IAAzC,eAAON,EAAP,KAAiBQ,EAAjB,KAgBMC,EAAQ,WACVF,EAAS,IACTC,EAAY,GACb,EAEP,OACI,+BACC,SAAC,KAAD,CACCE,cAAe,CACbZ,MAAO,GACPE,SAAU,IAEZL,iBAAkBA,EAClBgB,SAAU,SAAAC,GAzBc,IAAAC,EACtBA,EAAMC,iBAEVV,GACKW,EAAAA,EAAAA,IAAM,CACHjB,MAAOA,EACPE,SAAUA,KAGdS,IAkBAO,QAAQC,IAAI,SAAUL,EACvB,EATF,SAUK,gBACAA,EADA,EACAA,OACAM,EAFA,EAEAA,OACAC,EAHA,EAGAA,QACAC,EAJA,EAIAA,aACAC,EALA,EAKAA,WACAC,EANA,EAMAA,aANA,OAQL,UAACvC,EAAD,CAAa4B,SAAUW,EAAvB,WACG,SAACnC,EAAD,UAAO,WACP,UAACD,EAAD,YACA,SAACE,EAAD,CAAamC,KAAK,QACdC,KAAK,QACLC,MAAOb,EAAOd,MACd4B,SAAUN,EACVO,OAAQN,EACPO,YAAY,QACZ7B,UAAQ,KACb,SAACL,EAAD,UACWwB,EAAOpB,OAASqB,EAAQrB,OAASoB,EAAOpB,SAEnD,SAACV,EAAD,CAAcmC,KAAK,WACfC,KAAK,WACLC,MAAOb,EAAOZ,SACd0B,SAAUN,EACVO,OAAQN,EACPO,YAAY,WACZ7B,UAAQ,KAEb,SAACL,EAAD,UACWwB,EAAOlB,UAAYmB,EAAQnB,UAAYkB,EAAOlB,eAGzD,SAACV,EAAD,CAAQiC,KAAK,SAAb,SAAsB,WACtB,UAAC9B,EAAD,WAAM,0BAAsB,SAACF,EAAD,CAAesC,GAAG,YAAlB,SAA8B,kBAlCxD,KAyCT,C,2CCjGgBC,EAAcC,EAAQ,KAA/BC,QAMR,UAJkB,WAChB,OAAM,SAACF,EAAD,GACP,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/authPages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n width: 280px;\nmargin: auto;\ndisplay:flex;\nflex-direction:column;\nalign-items: center;\njustify-content: center;\npadding: 40px 12px;\nborder-radius: 20px;\nmargin-top: 40px;\n\nbackground-color: rgba(255, 255, 255, 1);\n\nbox-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n@media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 75px;\n    margin-top: 80px;\n    border-radius: 40px;\n  }\n`\n\nexport const Wrap = styled.div`\ndisplay: flex;\nflex-direction:column;\ngap:14px;\nmargin-bottom: 110px;\n@media screen and (min-width: 768px) {\n    gap:32px; \n    margin-bottom: 60px;\n}\n`\n\nexport const Title = styled.h2`\ntext-align: center;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\nmargin-bottom:20px;\n@media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom:40px;\n}\n\n`\n\nexport const FieldStyled = styled(Field)`\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.5;\nletter-spacing: 0.64px;\npadding: 12px 16px;\nwidth:256px;\nborder-radius: 40px;\nborder: 1px solid #54ADFF;\n\n/* background-color:rgba(255, 255, 255, 1); */\n\ncolor: #888;\n@media screen and (min-width: 768px) {\n    width:458px;\n}\n`\n\nexport const FieldError = styled(Field)`\nborder: 1px solid rgba(244, 63, 94, 1);\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nwidth: 256px;\nheight: 48px;\npadding: 10px 28px;\njustify-content: center;\nalign-items: center;\nborder-radius: 40px;\nfont-size: 20px;\nfont-style: normal;\nfont-weight: 600;\nline-height: normal;\nletter-spacing: 0.8px;\nborder: transparent;\nmargin-bottom: 8px;\n\ncolor:rgba(255, 255, 255, 1);\nbackground-color: #54ADFF;\n@media screen and (min-width: 768px) {\n    width: 478px;\n    margin-bottom: 20px;\n}\n`\n\nexport const StyledNavLink = styled(NavLink)`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\ntext-decoration-line: underline;\n\ncolor: #54ADFF;\n`\n\nexport const Text = styled.p`\ntext-align: center;\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\n\ncolor: #888;\n`\n\nexport const TextError = styled.div`\nfont-size: 12px;\nline-height: 1.3;\nfont-weight: 400;\ncolor:rgba(244, 63, 94, 1);\n`","import {Title, FieldStyled, FormStyled, Button, Text, Wrap, StyledNavLink, TextError} from './LoginForm.styled'\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup'\n\nconst validationSchema = Yup.object().shape({\n    email:Yup.string().required(\"Field is a required\").email('Enter a valid email'),\n    password:Yup.string().required(\"Field is a required\")\n    .min(6, \"Password must be at least 8 characters\")\n    .max(16, \"Password must be less at 16 characters\")\n    .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,16}$/,\n        'Password must contain at least 1 uppercase letter, 1 lowercase letter and 1 number'\n      )\n      \n    })\n   \n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n\n    const handleLogInSubmit = event => {\n        event.preventDefault();\n\n    dispatch(\n         logIn({\n            email: email,\n            password: password,\n          })\n        );\n        reset();\n      };\n\n    const reset = () => {\n        setEmail('');\n        setPassword('');\n      };\n\nreturn(\n    <> \n     <Formik\n      initialValues={{\n        email: '',\n        password: ''\n      }}\n      validationSchema={validationSchema}\n      onSubmit={values => {\n        handleLogInSubmit()\n        console.log(\"submit\", values);\n      }}>\n         {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n     <FormStyled  onSubmit={handleSubmit}>\n        <Title>Login</Title>\n        <Wrap>\n        <FieldStyled type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Email' \n             required/>\n        <TextError>\n                  {errors.email && touched.email && errors.email}\n        </TextError>\n        <FieldStyled  type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Password'\n             required/>\n     \n        <TextError>\n                  {errors.password && touched.password && errors.password }\n        </TextError>\n        </Wrap>\n        <Button type='submit'>Login</Button>\n        <Text>Don't have an account?<StyledNavLink to=\"/register\">Register</StyledNavLink></Text>\n     </FormStyled>\n     )}\n     </Formik>\n    </>\n   \n)\n}\n\nexport default LoginForm\n\n\n","const { default: LoginForm } = require(\"components/LoginForm/LoginForm\")\n\nconst LoginPage = () => {\n  return<LoginForm/> ;\n};\n\nexport default LoginPage;\n"],"names":["FormStyled","styled","Form","Wrap","Title","FieldStyled","Field","Button","StyledNavLink","NavLink","Text","TextError","validationSchema","Yup","shape","email","required","password","min","max","matches","dispatch","useDispatch","useState","setEmail","setPassword","reset","initialValues","onSubmit","values","event","preventDefault","logIn","console","log","errors","touched","handleChange","handleBlur","handleSubmit","type","name","value","onChange","onBlur","placeholder","to","LoginForm","require","default"],"sourceRoot":""}