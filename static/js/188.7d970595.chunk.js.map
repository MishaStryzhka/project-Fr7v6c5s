{"version":3,"file":"static/js/188.7d970595.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/authPages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom';\nimport { Form, Field } from 'formik';\nimport IconCross from 'images/icons/IconCross';\nimport IconEyeClosed from 'images/icons/IconEyeClosed'\n\nexport const FormStyled = styled(Form)`\n width: 280px;\nmargin: auto;\ndisplay:flex;\nflex-direction:column;\nalign-items: center;\njustify-content: center;\npadding: 40px 12px;\nborder-radius: 20px;\nmargin-top: 40px;\n\nbox-shadow:  ${({ theme }) => theme.boxShadow};\n/* rgba(136, 198, 253, 0.19); */\n@media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 75px;\n    margin-top: 80px;\n    border-radius: 40px;\n  }\n`\n\nexport const Wrap = styled.div`\ndisplay: flex;\nflex-direction:column;\ngap:14px;\nmargin-bottom: 110px;\n@media screen and (min-width: 768px) {\n    gap:32px; \n    margin-bottom: 60px;\n}\n`\n\nexport const Title = styled.h2`\ntext-align: center;\nfont-size: 24px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\nmargin-bottom:20px;\ncolor:${({ theme }) => theme.color.secondary};\n@media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom:40px;\n}\n\n`\n\nexport const FieldStyled = styled(Field)`\ndisplay: block;\nposition: relative;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.5;\nletter-spacing: 0.64px;\npadding: 12px 16px;\nwidth:256px;\nborder-radius: 40px;\nborder: 1px solid ${({ theme }) => theme.color.btnDark};\ncolor: #888;\noverflow: hidden;\n@media screen and (min-width: 768px) {\n    width:458px;\n}\n`\n\nexport const FieldError = styled(Field)`\nposition:relative;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.5;\nletter-spacing: 0.64px;\npadding: 12px 16px;\nwidth:256px;\nborder-radius: 40px;\nborder: 1px solid ${({ theme }) => theme.color.error};\ncolor: #888;\n@media screen and (min-width: 768px) {\n    width:458px;}\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nwidth: 256px;\nheight: 48px;\npadding: 10px 28px;\njustify-content: center;\nalign-items: center;\nborder-radius: 40px;\nfont-size: 20px;\nfont-style: normal;\nfont-weight: 600;\nline-height: normal;\nletter-spacing: 0.8px;\nborder: transparent;\nmargin-bottom: 8px;\n\ncolor:${({ theme }) => theme.color.background};\nbackground-color: ${({ theme }) => theme.color.btnDark};\n@media screen and (min-width: 768px) {\n    width: 478px;\n    margin-bottom: 20px;\n}\n`\n\nexport const StyledNavLink = styled(NavLink)`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\ntext-decoration-line: underline;\n\ncolor: ${({ theme }) => theme.color.btnDark};\n`\n\nexport const Text = styled.p`\ntext-align: center;\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.48px;\n\ncolor: #888;\n`\n\nexport const TextError = styled.div`\nfont-size: 12px;\nline-height: 1.3;\nfont-weight: 400;\ncolor:${({ theme }) => theme.color.error};\nmargin-top: 4px;\nmargin-left: 16px;\n`\n\n\nexport const SuccessText = styled.div`\nmargin-top:4px;\nmargin-left: 16px;\nfont-size: 12px;\nline-height: 1.3;\nfont-weight: 400;\ncolor:${({ theme }) => theme.color.indicator};\n`\n\nexport const IconCrossStyle = styled( IconCross )`\nposition:absolute;\ntop:12px;\nright: 16px;\n`\n\nexport const IconEyeClosedStyle = styled (IconEyeClosed)`\nposition:absolute;\ntop:12px;\nright: 16px;\n`","import {Title, FieldStyled, FormStyled, Button, Text, Wrap, StyledNavLink, TextError, FieldError, SuccessText, IconCrossStyle, IconEyeClosedStyle} from './LoginForm.styled'\n// import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup'\nimport theme from 'components/theme';\nimport { useAuth } from 'hooks';\n\n\nconst validationSchema = Yup.object().shape({\n    email:Yup.string().required(\"Field is a required\").email('Enter a valid Email'),\n    password:Yup.string().required(\"Field is a required\")\n    .min(6, \"Password must be at least 8 characters\")\n    .max(16, \"Password must be less at 16 characters\")\n    .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,16}$/,\n        'Password must contain at least 1 uppercase letter, 1 lowercase letter and 1 number'\n      )\n      \n    })\n   \n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState('');\n    const {  currentTheme } = useAuth();\n\n\n    const handleLogInSubmit = async (values) => {\n    try {\n     const res = await dispatch(\n        logIn({\n           email: values.email,\n           password: values.password,\n         })\n       );\n       if (res.error) {\n        console.log(res.error);\n      } else {\n        console.log(res);\n        navigate('/user');\n      }\n     } catch (error) {\n      console.error(error);\n     }\n    }\n\nreturn(\n    <> \n     <Formik\n      initialValues={{\n        email: '',\n        password: ''\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleLogInSubmit}\n      >\n         {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n     <FormStyled  onSubmit={handleSubmit}>\n        <Title>Login</Title>\n        <Wrap>\n        {errors.email && touched.email && errors.email ? \n        <label style={{position:'relative'}}><FieldError type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Email'\n             required/>\n             <IconCrossStyle fill={theme[currentTheme].color.error}/>\n             <TextError>{errors.email && touched.email && errors.email}</TextError>\n             </label>:\n            <FieldStyled  type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            style={{borderColor:touched.email? ({ theme }) => theme.color.indicator:({ theme }) => theme.color.btnDark}}\n             placeholder='Email'\n             required/>}\n\n          {errors.password && touched.password && errors.password ?\n           <label style={{position:'relative'}}>\n           <FieldError type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Password'\n             required/>\n             <TextError>{errors.password && touched.password && errors.password}</TextError>\n             </label>:\n             <label style={{position:'relative'}}>\n            <FieldStyled  type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n             placeholder='Password'\n           // style={{borderColor: ({ theme }) => theme.color.btnDark}}\n             required/>\n           <IconEyeClosedStyle/>\n           {!errors.password && touched.password && <SuccessText>Password is secure</SuccessText>  }\n        </label> \n            } \n       </Wrap>\n        <Button type='submit'>Login</Button>\n        <Text>Don't have an account?<StyledNavLink to=\"/register\">Register</StyledNavLink></Text>\n     </FormStyled>\n     )}\n     </Formik>\n    </>\n   \n)\n}\n\nexport default LoginForm\n\n\n","const { default: LoginForm } = require(\"components/LoginForm/LoginForm\")\n\nconst LoginPage = () => {\n  return<LoginForm/> ;\n};\n\nexport default LoginPage;\n"],"names":["FormStyled","styled","Form","theme","boxShadow","Wrap","Title","color","secondary","FieldStyled","Field","btnDark","FieldError","error","Button","background","StyledNavLink","NavLink","Text","TextError","SuccessText","indicator","IconCrossStyle","IconCross","IconEyeClosedStyle","IconEyeClosed","validationSchema","Yup","shape","email","required","password","min","max","matches","dispatch","useDispatch","navigate","useNavigate","currentTheme","useAuth","handleLogInSubmit","values","logIn","res","console","log","initialValues","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","style","position","type","name","value","onChange","onBlur","placeholder","fill","borderColor","to","LoginForm","require","default"],"sourceRoot":""}